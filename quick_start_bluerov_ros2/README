

1) installer QGroundControl :

https://docs.qgroundcontrol.com/master/en/qgc-user-guide/getting_started/download_and_install.html

-> creer le network Ethernet pour s'y connecter (Adresse ip PC écrite sur le tube du ROV (192.168.XX.XX et le mask 255.255.255.0)

Installer sshpass:
sudo apt-get install sshpass

et tenter de vous connecter en ssh une 1er fois

ping (adresse ip)  <- est ce que l'on recoit un message ?
ssh pi@(adresse ip)  <- se connecter en ssh au bluerov
mot de passe : companion

NOTE : à chaque allumage du ROV, vous devez vous connecter avec QGroundControl une première fois et attendre que la barre verte soit rempli ("ready to fly") 
-> le logiciel initialise des variables que le MAVROS n'initialise pas.


2) installer ROS2

https://docs.ros.org/en/humble/Installation.html

3) installer MAVROS2

https://github.com/mavlink/mavros/blob/master/mavros/README.md#installation
-> remplacer les "kinematic" par votre version de ROS2 (exemple : "humble")

4) installer node_joy (node connection à une gamepad)
sudo apt update
sudo apt install ros-humble-joy

test si le noeud fonctionne :
ros2 run joy joy_node
ros2 topic echo /joy
et observer les changements en bougeant les joystick/les boutons de la manette

5) Python environment

The following modules are required: 
pip install (...)
- numpy
- opencv-python (version 4.2.0) 
- opencv-contrib-python
- pyautogui
- imutils
- sockets
- vidgear
- brping
- ffmpeg
(+ sshpass si vous ne l'avez pas déjà fait)

6) Intaller le package "quick_start_bluerov" à la racine

- télécharger le dossier
- colcon build
- source install/setup.bash

penser a mettre dans le .bashrc  le source "install/setup.bash"
--> "source ~/quick_start_bluerov_ros2/install/setup.bash"

Vous pouvez tenter de lancer le ROV avec le fichier launch associé au nom du robot
ros2 launch bluerov_launch0 px4_((nom du rov).launch

7) Pour piloter les lumières

Sur certains bluerovs du labo (inky et pinky entre autre), les lumières ont été connectés à la raspberry et non sur l'autopilote sur à des anciens bugs de l'OS (résoulu depuis par le fabricant, mais les config n'ont pas été remodifiés sur ces robots).
Pour controler ces lumières, des codes ont été rajoutés sur la raspberry, pilotable via le node "bluerov_control0" (fonction "light_control" implémenté dans "utils_0.py").
Ces fonctions utilisent des commandes ssh entre le pc et le robot, aussi il est INDISPENSABLE d'établir une première connexion manuelle par ssh entre pc et le robot afin d'autoriser les accès:

- ouvrez un terminal
- faite "ssh pi@(adresse_ip_robot)" (ex : ssh pi@192.168.2.2 pour un bluerov par defaut)
- entrer le mot de passe : companion
- faite "yes" quand on vous y invite pour autoriser les connexions entre l'ordinateur et la raspberry (ne sera demander qu'une seule fois: à la première connexion entre la raspberry et l'ordinateur)

C'est bon : vous pouvez refermer la connexion avec "exit" et fermer le terminal.
Note : manip à ne faire qu'une fois, mais pour chaque pair pc-robot que vous utiliser.


---------------------------------------
POUR LE GROUPE UTILISANT LE SONAR OCULUS :
---------------------------------------

installer le driver pour l'occulus :

https://github.com/godardma/oculus_ros2






